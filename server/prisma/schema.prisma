// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  pannels          Pannel[]
  answers          Answer[]
  scrapped_pannels Scrap[]

  username   String
  password   String
  nickname   String
  provider   String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt()
  deleted_at DateTime?
}

model Scrap {
  user      User   @relation(fields: [user_id], references: [id])
  user_id   String
  pannel    Pannel @relation(fields: [pannel_id], references: [id])
  pannel_id Int

  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt()
  deleted_at DateTime?

  @@id([user_id, pannel_id])
}

model Pannel {
  id Int @id @default(autoincrement())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  scrapped_users Scrap[]
  questions      Question[]

  describe    String
  is_archived Boolean   @default(false)
  scrap_num   Int       @default(0)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?
}

model Question {
  id Int @id @default(autoincrement())

  pannel    Pannel @relation(fields: [pannel_id], references: [id])
  pannel_id Int

  answers Answer[]

  content    String
  answer_num Int       @default(0)
  like_num   Int       @default(0)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}

model Answer {
  id Int @id @default(autoincrement())

  User        User     @relation(fields: [user_id], references: [id])
  user_id     String
  Question    Question @relation(fields: [question_id], references: [id])
  question_id Int

  content    String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
}
