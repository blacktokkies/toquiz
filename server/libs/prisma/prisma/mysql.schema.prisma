// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/mysql"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  panels  Panel[]
  answers Answer[]
  scraps  Scrap[]

  username  String
  password  String
  nickname  String
  provider  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
  deletedAt DateTime?
}

model Scrap {
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  panel   Panel  @relation(fields: [panelId], references: [id])
  panelId Int

  createdAt DateTime @default(now())

  @@id([userId, panelId])
}

model Panel {
  id Int @id @default(autoincrement())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  scraps    Scrap[]
  questions Question[]

  description String
  isArchived  Boolean   @default(false)
  scrapNum    Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Question {
  id Int @id @default(autoincrement())

  panel   Panel @relation(fields: [panelId], references: [id])
  panelId Int

  answers Answer[]

  content   String
  answerNum Int       @default(0)
  likeNum   Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Answer {
  id Int @id @default(autoincrement())

  User       User     @relation(fields: [userId], references: [id])
  userId     String
  Question   Question @relation(fields: [questionId], references: [id])
  questionId Int

  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
